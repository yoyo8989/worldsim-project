name: CI

on:
  [push, pull_request]   # プッシュ／PR で起動

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ① Python のみセットアップ (キャッシュは外す)
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # ② Poetry 本体をインストール
      - name: Install Poetry
        run: pip install poetry

      # ③ 依存キャッシュ (任意)
      - name: Cache Poetry packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # ④ プロジェクト依存をインストール
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Cache Godot binary
        uses: actions/cache@v3
        with:
          path: C:/godot
          key: ${{ runner.os }}-godot-${{ hashFiles('**/Godot_v4.2-*.zip') }}
          restore-keys: |
            ${{ runner.os }}-godot-

      - name: Setup Godot (headless + templates)
        uses: chickensoft-games/setup-godot@v2.2.0
        with:
          version: '4.2.0'
          export-templates: true

      - name: Run pytest
        run: poetry run pytest

      - name: Run 100-year headless simulation
        shell: pwsh      # PowerShell を明示
        run: |           # ブロック構文開始。この次の行は「2スペース」下げる
          # 「&」で外部コマンドを呼び出し、"$env:GODOT" でパスを展開
          & "$env:GODOT" `
            --headless `
            -s res://tests/run_100yrs.gd

